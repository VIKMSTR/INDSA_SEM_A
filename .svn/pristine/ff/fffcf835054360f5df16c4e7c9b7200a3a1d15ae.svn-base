using System;
using System.Collections.Generic;
using System.Drawing;

namespace INDSA_Sem_A
{
    public class Graph : IGraph
    {
        public Dictionary<string, Node> Nodes;

        public Graph()
        {
            Nodes = new Dictionary<string, Node>();
        }
        public bool IsEmpty()
        {
            if (Nodes.Count == 0)
            {
                return true;
            }
             return false;
        }

        public int NumberOfElements()
        {
            return Nodes.Count;
        }

        public void AddNewNode()
        {
            Node n = new Node(NodeType.Crossroads,new Point( 20,20));
            Nodes.Add(n.Id,n);
        }

        public void AddNewEdge()
        {
            throw new System.NotImplementedException();
        }

        public Node RemoveNode()
        {
            throw new System.NotImplementedException();
        }

        public Edge RemoveEdge()
        {
            throw new System.NotImplementedException();
        }

        public Node FindNode()
        {
            throw new System.NotImplementedException();
        }

        public Edge FindEdge()
        {
            throw new System.NotImplementedException();
        }

        public List<Follower> GetFollowers()
        {
            throw new System.NotImplementedException();
        }

        public void GetAllNodes()
        {
            foreach (string s in Nodes.Keys)
            {
                Console.WriteLine("{0} - {1}",s,Nodes[s].ToString());
                
            }
            Console.ReadLine();
        }
    }
}